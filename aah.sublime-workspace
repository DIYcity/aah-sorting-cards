{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"in",
				"inputEnabled"
			],
			[
				"close",
				"closeBackgroundSprite"
			],
			[
				"scale",
				"scaleCardDownWithAnimation"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Preloader.js",
			"settings":
			{
				"buffer_size": 1332,
				"line_ending": "Unix"
			}
		},
		{
			"file": "model/progressbar.js",
			"settings":
			{
				"buffer_size": 3276,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Boot.js",
			"settings":
			{
				"buffer_size": 335,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Game.js",
			"settings":
			{
				"buffer_size": 2702,
				"line_ending": "Unix"
			}
		},
		{
			"file": "model/card.js",
			"settings":
			{
				"buffer_size": 2815,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\nBucket = function(x, bucketText, game) {\n  this.cards = [];\n  this.game = game;\n  this.radius = Bucket.imageDiameter / 2;\n  this.y = 180 + this.radius;\n  this.x = x + this.radius;\n  this.isScaledUp = false;\n\n  /* Bucket sprite */\n  this.bucketSprite = game.bucketGroup.create(this.x, this.y, 'bucket');\n  /* Resize the sprite */\n  this.bucketSprite.scale.setTo(Bucket.originalScale, Bucket.originalScale);\n  this.bucketSprite.anchor.setTo(0.5, 0.5);\n\n  var bucketTextStyle = {\n    font: '24px Helvetica Neue',\n    fill: \"#fff\",\n    boundsAlignH: \"center\",\n    boundsAlignV: \"middle\",\n    wordWrap: true,\n    wordWrapWidth: 7*this.radius/4\n  };\n  var text = game.add.text(0, 0, bucketText, bucketTextStyle, game.group);\n  text.setShadow(3, 3, 'rgba(0,0,0,0.5)', 2);\n  text.setTextBounds(this.x-this.radius, this.y+this.radius/8, 2*this.radius, 2*this.radius);\n\n  var scoreStyle = bucketTextStyle;\n  scoreStyle.boundsAlignH = 'left';\n\n  this.scoreText = game.add.text(0, 0, '0', bucketTextStyle, game.group);\n  this.scoreText.setTextBounds(this.x-10, this.y-20, 20, 50);\n\n  // register event listeners.\n  this.bucketSprite.inputEnabled = true;\n  this.bucketSprite.events.onInputDown.add(this.scaleUpAndBeyond, this);\n};\n\nBucket.originalScale = 0.7;\n/* Diameter of the buckets */\nBucket.imageDiameter = 0;\n\nBucket.imageWidth = 388;\n\nBucket.createBuckets = function(game, bucketTexts) {\n  /* Enlarged bucket sprite */\n  var scaledUpBucketSprite = game.add.sprite(this.x, this.y, 'bucket');\n  scaledUpBucketSprite.visible = false;\n\n  var totalNumOfBuckets = bucketTexts.length;\n  Bucket.imageDiameter = Bucket.imageWidth * Bucket.originalScale; // 388x388 is the size of the image\n  var buckets = [];\n  var emptySpace = SortCards.SCREEN_SIZE - totalNumOfBuckets * Bucket.imageDiameter;\n  if (emptySpace < 0) {\n    Bucket.originalScale = Bucket.originalScale - 0.05;\n    return Bucket.createBuckets(game, totalNumOfBuckets);\n  }\n  var spacingBetweenBuckets = emptySpace / (totalNumOfBuckets + 1);\n  var bucketSpace = spacingBetweenBuckets + Bucket.imageDiameter;\n  for(var i = 0; i < totalNumOfBuckets; i++) {\n    var bucket = new Bucket(spacingBetweenBuckets + bucketSpace*i, bucketTexts[i], game);\n    bucket.scaledBeyond = false;\n    bucket.scaledUpBucketSprite = scaledUpBucketSprite;\n    buckets.push(bucket);\n  }\n  return buckets;\n};\n\nBucket.prototype = {\n  isInside: function(pos) {\n    if (this.scaledUp) {\n      return false  // if insideDropBucket call scaleDownToEarch and always return true\n    }\n    // Using formulae - (x - h)2 + (y - k)2 = r2\n    return Math.sqrt((pos.x-this.x)*(pos.x-this.x) + (pos.y-this.y)*(pos.y-this.y)) < this.radius;\n  },\n\n  scaleUpAndBeyond: function () {\n    if(this.cards.length == 0) {\n      // No need to scale up when there are no cards.\n      return;\n    }\n    this.game.backgroundSprite.visible = true;\n    this.scaledUpBucketSprite.visible = true;\n    this.game.closeBackgroundSprite.visible = true;\n    this.scaledUpBucketSprite.bringToTop();\n   /*\n    var scale = Bucket.originalScale * 5;\n    this.game.add.tween(\n        this.bucketSprite.scale).to( { x: scale, y: scale },\n        100, Phaser.Easing.Linear.None, true);\n    this.game.add.tween(\n        this.bucketSprite).to( { x: this.game.world.centerX, y: this.game.world.centerY },\n        100, Phaser.Easing.Linear.None, true);\n    */\n    // show cards\n    var self = this;    \n      window.setTimeout((function() {\n        for (i = 0; i < self.cards.length; i++) {\n          self.cards[i].showCard();\n          self.cards[i].bringToTop();\n        }\n      }), 100);\n    this.scaledBeyond = true;\n  },\n\n  scaleDownToEarth: function () {\n    this.scaleDown();\n    for (i = 0; i < this.cards.length; i++) {\n      this.cards[i].scaleCardDownWithAnimation();\n    }\n    this.scaledBeyond = false;\n    this.scaledUpBucketSprite.visible = false;\n    this.game.closeBackgroundSprite.visible = false;\n  },\n\n  scaleUpOrDown: function () {\n    if (this.isScaledUp) {\n      this.scaleDown();\n    } else {\n      this.scaleUp();\n    }\n  },\n\n  scaleUp: function() {\n    //this.bucketSprite.loadTexture('bucket_selected');\n    var scale = Bucket.originalScale * 2;\n    this.game.add.tween(\n        this.bucketSprite.scale).to( { x: scale, y: scale },\n        250, Phaser.Easing.Linear.None, true);\n    // show cards\n    var self = this;    \n      window.setTimeout((function() {\n        for (i = 0; i < self.cards.length; i++) {\n          self.cards[i].showCard();\n        }\n      }), 100);\n    this.isScaledUp = true;\n  },\n\n  scaleDown: function() {\n    if (this.scaledUp) {\n      return;\n    }\n    this.bucketSprite.sendToBack();\n    this.bucketSprite.loadTexture('bucket');\n    this.game.add.tween(\n        this.bucketSprite.scale).to( { x: Bucket.originalScale, y: Bucket.originalScale },\n        250, Phaser.Easing.Linear.None, true);\n    this.game.add.tween(\n        this.bucketSprite).to( { x: this.x, y: this.y },\n        250, Phaser.Easing.Linear.None, true);\n    // hide cards\n    for (var i = 0; i < this.cards.length; i++) {\n      this.cards[i].hideCard();\n    }\n    this.isScaledUp = false;\n  },\n\n  add: function(card){\n    if (this.cards.indexOf(card)>-1) {\n      return;\n    }\n    this.cards.push(card);\n    this.updateScoreTextWithAnimation();\n  },\n\n  remove: function(card){\n    var index = this.cards.indexOf(card);\n    if (index < 0) {\n      return;\n    }\n    this.cards = this.cards.slice(0,index).concat(this.cards.slice(index+1))\n    this.updateScoreTextWithoutAnimation();\n  },\n\n  clear: function(){\n    this.cards = [];\n    this.updateScoreTextWithAnimation();\n  },\n\n  updateScoreTextWithAnimation: function(){\n    y = this.scoreText.y;\n    this.game.add.tween(this.scoreText)\n        .to({y:this.scoreText.y-20}, 50, Phaser.Easing.Linear.NONE, true, true, true, true);\n    this.scoreText.text = this.cards.length;\n  },\n\n  updateScoreTextWithoutAnimation: function(){\n    this.scoreText.text = this.cards.length;\n  }\n};",
			"file": "model/bucket.js",
			"file_size": 5918,
			"file_write_time": 1475445706000000,
			"settings":
			{
				"buffer_size": 5930,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/jasmeetsingh/WebstormProjects/aah-sorting-cards/www/sortingCards/www/src/Game.js"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"this.scaledUp ",
			"scaledUp",
			"gameState.add",
			"gamestate.add",
			"showCard",
			"backgroundSprite",
			"\n    this.game.world.bringToTop(this.bucketSprite);",
			"bucketSprite",
			"addBucketClickBackground",
			"group",
			"showC",
			"setCardInABucket",
			"showCard",
			"hideCard",
			"scale.se",
			"scale",
			"5",
			"bucketsDistance",
			"Helvetica",
			"\",\n",
			"text",
			");\n",
			"background",
			"back"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"this.scaledBeyond "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Preloader.js",
					"settings":
					{
						"buffer_size": 1332,
						"regions":
						{
						},
						"selection":
						[
							[
								831,
								843
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "model/progressbar.js",
					"settings":
					{
						"buffer_size": 3276,
						"regions":
						{
						},
						"selection":
						[
							[
								2744,
								2744
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Boot.js",
					"settings":
					{
						"buffer_size": 335,
						"regions":
						{
						},
						"selection":
						[
							[
								19,
								19
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Game.js",
					"settings":
					{
						"buffer_size": 2702,
						"regions":
						{
						},
						"selection":
						[
							[
								2510,
								2531
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 981.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "model/card.js",
					"settings":
					{
						"buffer_size": 2815,
						"regions":
						{
						},
						"selection":
						[
							[
								1056,
								1056
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 371.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "model/bucket.js",
					"settings":
					{
						"buffer_size": 5930,
						"regions":
						{
						},
						"selection":
						[
							[
								2218,
								2218
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 573.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true
}
